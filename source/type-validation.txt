.. _intellij-type-validation:

===============
Type Validation
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

The MongoDB IntelliJ plugin examines the document fields to ensure the
data types are valid. For example, if you use a document field that
performs an equality comparison, or an insert or update of document
values, the field is examined to ensure the type is valid.

If the type is invalid, the plugin shows a notification that indicates
the type cannot be assigned.

You can change your code to use the required type. Alternatively, if the
field is dynamically typed and strict typing rules aren't applied, you
can ignore the invalid type notification.

Examples
--------

In the following example Java code snippet, the ``trip_status`` field
type is ``String`` but the ``Filters`` operation performs equality
comparison with the ``Integer`` value ``1324324``:

.. code-block:: java
   :copyable: false
   :emphasize-lines: 3

   public List<Document> findCompleted TripsByDriver( String driverId ) {
      return trips.find( Filters.and(
         Filters.eq( fieldName: "trip_status", value: 1324324 )
         Filters.eq( fieldName: "driver_id", driverId )
      )).into( new ArrayList<> () );
   }

Because ``value`` is an ``Integer`` but a ``String`` is required, the
plugin shows a notification about the invalid type:

.. code-block:: java
   :copyable: false
   
   "Integer" (type of provided value) can not be assigned to
   "String" (type of "trip_status")

To resolve the invalid type, you can change the value to a ``String``.

Learn More
----------

:ref:`intellij-connect`
